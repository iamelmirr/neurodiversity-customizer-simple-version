{"version":3,"file":"background.js","mappings":"AAKA","sources":["webpack://neurodiversity-customizer/./src/background/index.js"],"sourcesContent":["// Background script for the Neurodiversity Web Customizer extension\r\n\r\n// This is a persistent service worker that will handle events and keep track of state\r\n\r\n// Listen for installation\r\nchrome.runtime.onInstalled.addListener(() => {\r\n  console.log('Neurodiversity Web Customizer installed');\r\n  \r\n  // Initialize storage with default values if needed\r\n  chrome.storage.local.get(['activeMode'], (result) => {\r\n    if (!result.activeMode) {\r\n      chrome.storage.local.set({ activeMode: 'default' });\r\n    }\r\n  });\r\n});\r\n\r\n// Listen for tab updates to apply the stored mode to new pages\r\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\r\n  if (changeInfo.status === 'complete' && tab.url && tab.url.startsWith('http')) {\r\n    chrome.storage.local.get(['activeMode'], (result) => {\r\n      if (result.activeMode && result.activeMode !== 'default') {\r\n        chrome.tabs.sendMessage(tabId, { \r\n          action: 'applyMode', \r\n          mode: result.activeMode \r\n        });\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n// Listen for messages from popup or content scripts\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n  if (request.action === 'getModeStatus') {\r\n    chrome.storage.local.get(['activeMode'], (result) => {\r\n      sendResponse({ activeMode: result.activeMode || 'default' });\r\n    });\r\n    return true; // Indicates we want to send a response asynchronously\r\n  }\r\n});\r\n"],"names":[],"sourceRoot":""}